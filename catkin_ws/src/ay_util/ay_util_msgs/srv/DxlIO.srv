# Dynamixel low-level IO.

# Joint names.
string[] joint_names

# Command.  Available commands are:
#   'Read'  Read from Dynamixel. input: joint_names, data_s (address name).  return: res_ia.
#   'Write'  Write to Dynamixel. input: joint_names, data_s (address name), data_ia (values).
#   'EnableTorque'  Enable joint_names (joint_names is [], all joints are enabled).
#   'DisableTorque'  Disable joint_names (joint_names is [], all joints are disabled).
#   'Reboot'  Reboot joint_names (joint_names is [], all joints are rebooted).
#   'MoveTo'  Move to target position.  input: joint_names, data_fa (joint positions in radian), data_b (blocking).
#   'SetCurrent'  Set current.  input: joint_names, data_fa (currents in mA).
#   'SetVelocity'  Set velocity.  input: joint_names, data_fa (velocities in rad/s).
#   'SetPWM'  Set PWM.  input: joint_names, data_fa (PWM values in percentage).
string command

# Input data.  The use is different for each command.
int32[] data_ia
float32[] data_fa
string data_s
bool data_b

---

# dynamixel.getLastTxRxResult
int32 result
# dynamixel.getLastRxPacketError
int32 error

# Output data.  The use is different for each command.
int32[] res_ia
float32[] res_fa
