<!--
Choose a proper launcher of UR from the robot code.
Since this uses eval in if, it works with Kinetic+.
-->
<launch>

  <arg name="robot_code" default="" />
  <arg name="jsdev" default="/dev/input/js1" />
  <arg name="dxldev" default="/dev/ttyUSB0" />
  <arg name="with_gripper" default="true" />

  <!--#################################################################################
  TODO:FIXME:Separate robot_code into robot_code, gripper_code/finger_code,
  sim_flag to reduce the complexity.
  ##################################################################################-->

  <!--Launch a robot arm controller-->

  <group if="$(eval robot_code in ('UR3','UR3DxlG','UR3ThG','UR3DxlpO2_Straight1','UR3DxlpO2_SRound1','UR3DxlpO2_Fork1','UR3DxlpY1') )">
    <include file="$(find ay_util)/launch/ur/ur3_real.launch" >
      <arg name="jsdev" value="$(arg jsdev)" />
    </include>
  </group>
  <group if="$(eval robot_code in ('UR3_SIM','UR3DxlG_SIM','UR3ThG_SIM','UR3DxlpO2_Straight1_SIM','UR3DxlpO2_SRound1_SIM','UR3DxlpO2_Fork1_SIM','UR3DxlpY1_SIM') )">
    <include file="$(find ay_util)/launch/ur/ur3_ksim.launch">
      <arg name="jsdev" value="$(arg jsdev)" />
    </include>
  </group>

  <group if="$(eval robot_code in ('UR3e','UR3eThG','UR3eDxlG','UR3eDxlpO2_Straight1','UR3eDxlpO2_SRound1','UR3eDxlpO2_Fork1','UR3eDxlpY1') )">
    <include file="$(find ay_util)/launch/ur/ur3e_real.launch">
      <arg name="jsdev" value="$(arg jsdev)" />
    </include>
  </group>
  <group if="$(eval robot_code in ('UR3e125hz','UR3e125hzThG','UR3e125hzDxlG','UR3e125hzDxlpO2_Straight1','UR3e125hzDxlpO2_SRound1','UR3e125hzDxlpO2_Fork1','UR3e125hzDxlpY1') )">
    <include file="$(find ay_util)/launch/ur/ur3e_125hz_real.launch">
      <arg name="jsdev" value="$(arg jsdev)" />
    </include>
  </group>
  <group if="$(eval robot_code in ('UR3e_SIM','UR3eThG_SIM','UR3eDxlG_SIM','UR3eDxlpO2_Straight1_SIM','UR3eDxlpO2_SRound1_SIM','UR3eDxlpO2_Fork1_SIM','UR3eDxlpY1_SIM') )">
    <include file="$(find ay_util)/launch/ur/ur3e_ksim.launch">
      <arg name="jsdev" value="$(arg jsdev)" />
    </include>
  </group>

  <group if="$(eval robot_code in ('UR5e','UR5eThG','UR5eDxlpY1') )">
    <include file="$(find ay_util)/launch/ur/ur5e_real.launch">
      <arg name="jsdev" value="$(arg jsdev)" />
    </include>
  </group>
  <group if="$(eval robot_code in ('UR5e_SIM','UR5eThG_SIM','UR5eDxlpY1_SIM') )">
    <include file="$(find ay_util)/launch/ur/ur5e_ksim.launch">
      <arg name="jsdev" value="$(arg jsdev)" />
    </include>
  </group>

  <group if="$(eval robot_code in ('Gen3','Gen3ThG','Gen3DxlO3') )">
    <include file="$(find ay_util)/launch/gen3/gen3_real.launch">
      <arg name="jsdev" value="$(arg jsdev)" />
    </include>
  </group>


  <!--Launch a gripper controller-->
  <group if="$(arg with_gripper)">
    <include file="$(find ay_util)/launch/ur/ur_gripper_selector.launch">
      <arg name="robot_code" value="$(arg robot_code)" />
      <arg name="dxldev" value="$(arg dxldev)" />
    </include>
  </group>

  <!--
  <group if="$(eval robot_code in ('UR3DxlG','UR3eDxlG') )">
    <arg name="dxldev" default="/dev/ttyUSB0" />
    <node pkg="ay_util" type="dxlg_driver.py" name="gripper_driver" output="screen"
          args="$(arg dxldev) DxlGripper" />
  </group>

  <group if="$(eval robot_code in ('UR3ThG','UR3eThG','UR5eThG','Gen3ThG') )">
    <arg name="dxldev" default="/dev/ttyUSB0" />
    <node pkg="ay_util" type="dxlg_driver.py" name="gripper_driver" output="screen"
          args="$(arg dxldev) RHP12RNGripper" />
  </group>

  <group if="$(eval robot_code in ('UR3DxlpO2_Straight1','UR3DxlpO2_SRound1','UR3DxlpO2_Fork1', 'UR3eDxlpO2_Straight1','UR3eDxlpO2_SRound1','UR3eDxlpO2_Fork1') )">
    <arg name="dxldev" default="/dev/ttyUSB0" />
    <arg name="finger_type" value="$(eval robot_code.split('_')[1] )" />
    <node pkg="ay_util" type="dxlg_driver.py" name="gripper_driver" output="screen"
          args="$(arg dxldev) DxlpO2Gripper $(arg finger_type)" />
  </group>

  <group if="$(eval robot_code in ('Gen3DxlO3',) )">
    <arg name="dxldev" default="/dev/ttyUSB0" />
    <node pkg="ay_util" type="dxlg_driver.py" name="gripper_driver" output="screen"
          args="$(arg dxldev) DxlO3Gripper" />
  </group>
  -->

</launch>
